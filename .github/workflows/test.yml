name: Test

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, nightly]
    steps:
    - name: "Set environmental variables"
      shell: bash
      run: |
        RUST_BACKTRACE_nightly='1'
        CFLAGS_nightly='-fsanitize=leak'
        CXXFLAGS_nightly='-fsanitize=leak'
        RUSTFLAGS_nightly='-Zsanitizer=leak'

        # A function for defining a variable conditional on the toolchain in
        # use.
        tc_var() {
          # Replace any dots in the toolchain name with underscores. Necessary
          # due to shell imposed variable naming restrictions.
          var="${1}_$(echo ${{ matrix.rust }} | tr . _)"
          echo "${1}=${!var}" >> ${GITHUB_ENV}
        }

        tc_var RUST_BACKTRACE
        tc_var RUSTFLAGS
        tc_var CFLAGS
        tc_var CXXFLAGS
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rs/toolchain@v1.0.6
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        components: rustfmt
        override: true
    - name: Install deps
      run: |
        sudo apt-get install -y clang-14 libelf-dev zlib1g-dev linux-headers-$(uname -r)
        sudo ln -s /usr/include/asm-generic /usr/include/asm
        sudo rm -f /bin/clang && sudo ln -s /usr/bin/clang-14 /bin/clang
    - uses: Swatinem/rust-cache@v2.2.0
    - name: Build
      run: cargo build --locked --verbose --workspace --exclude runqslower
    - name: Run tests
      # Skip BTF tests which require sudo
      run: cargo test --locked --verbose --workspace --exclude runqslower -- --skip test_object --skip test_tc --include-ignored
    - name: Run BTF tests
      run: cd libbpf-rs && cargo test --locked --verbose -- test_object test_tc

  build-minimum:
    name: Build using minimum versions of dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: sudo apt-get install -y libelf-dev
      - name: Install Nightly Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: nightly
      - run: cargo +nightly -Z minimal-versions update
      - name: Install minimum Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          # Please adjust README and rust-version field in Cargo.toml files when
          # bumping version.
          toolchain: 1.58.0
          components: rustfmt
          default: true
      - uses: Swatinem/rust-cache@v2.2.0
      - name: Build
        run: cargo build --verbose --workspace --exclude runqslower

  build-capable:
    name: Build capable example with static libelf and libz
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: sudo apt-get install -y libelf-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2.2.0
      - run: RUSTFLAGS="$RUSTFLAGS -L /usr/lib/x86_64-linux-gnu" cargo build --locked --package capable --features=static
  clippy:
    name: Lint with clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: sudo apt-get install -y libelf-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - uses: Swatinem/rust-cache@v2.2.0
      - run: cargo clippy --locked --no-deps --all-targets --tests -- -D warnings
  rustfmt:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - run: cargo fmt --package libbpf-cargo libbpf-rs -- --check
  cargo-doc:
    name: Check documentation
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: '-D warnings'
    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: sudo apt-get install -y libelf-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo doc --locked --no-deps
